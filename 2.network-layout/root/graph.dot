digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.autoscaling.aws_autoscaling_group.webserver (expand)" [label = "module.autoscaling.aws_autoscaling_group.webserver", shape = "box"]
		"[root] module.autoscaling.aws_launch_template.webserver (expand)" [label = "module.autoscaling.aws_launch_template.webserver", shape = "box"]
		"[root] module.autoscaling.data.aws_ami.ubuntu (expand)" [label = "module.autoscaling.data.aws_ami.ubuntu", shape = "box"]
		"[root] module.autoscaling.data.template_cloudinit_config.config (expand)" [label = "module.autoscaling.data.template_cloudinit_config.config", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" [label = "module.autoscaling.module.alb.aws_lb.application", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" [label = "module.autoscaling.module.alb.aws_lb.application_no_logs", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp (expand)" [label = "module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp_no_logs (expand)" [label = "module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp_no_logs", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https (expand)" [label = "module.autoscaling.module.alb.aws_lb_listener.frontend_https", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https_no_logs (expand)" [label = "module.autoscaling.module.alb.aws_lb_listener.frontend_https_no_logs", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener (expand)" [label = "module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener_no_logs (expand)" [label = "module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener_no_logs", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)" [label = "module.autoscaling.module.alb.aws_lb_target_group.main", shape = "box"]
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)" [label = "module.autoscaling.module.alb.aws_lb_target_group.main_no_logs", shape = "box"]
		"[root] module.autoscaling.module.iam_instance_profile.aws_iam_instance_profile.iam_instance_profile (expand)" [label = "module.autoscaling.module.iam_instance_profile.aws_iam_instance_profile.iam_instance_profile", shape = "box"]
		"[root] module.autoscaling.module.iam_instance_profile.aws_iam_role.iam_role (expand)" [label = "module.autoscaling.module.iam_instance_profile.aws_iam_role.iam_role", shape = "box"]
		"[root] module.autoscaling.module.iam_instance_profile.aws_iam_role_policy.iam_role_policy (expand)" [label = "module.autoscaling.module.iam_instance_profile.aws_iam_role_policy.iam_role_policy", shape = "box"]
		"[root] module.autoscaling.module.iam_instance_profile.data.aws_iam_policy_document.iam_policy_document (expand)" [label = "module.autoscaling.module.iam_instance_profile.data.aws_iam_policy_document.iam_policy_document", shape = "box"]
		"[root] module.database.aws_db_instance.database (expand)" [label = "module.database.aws_db_instance.database", shape = "box"]
		"[root] module.database.random_id.random_16 (expand)" [label = "module.database.random_id.random_16", shape = "box"]
		"[root] module.networking.data.aws_availability_zones.available (expand)" [label = "module.networking.data.aws_availability_zones.available", shape = "box"]
		"[root] module.networking.module.db_sg.aws_security_group.security_group (expand)" [label = "module.networking.module.db_sg.aws_security_group.security_group", shape = "box"]
		"[root] module.networking.module.lb_sg.aws_security_group.security_group (expand)" [label = "module.networking.module.lb_sg.aws_security_group.security_group", shape = "box"]
		"[root] module.networking.module.vpc.aws_db_subnet_group.database (expand)" [label = "module.networking.module.vpc.aws_db_subnet_group.database", shape = "box"]
		"[root] module.networking.module.vpc.aws_default_network_acl.this (expand)" [label = "module.networking.module.vpc.aws_default_network_acl.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_default_vpc.this (expand)" [label = "module.networking.module.vpc.aws_default_vpc.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_eip.nat (expand)" [label = "module.networking.module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.networking.module.vpc.aws_elasticache_subnet_group.elasticache (expand)" [label = "module.networking.module.vpc.aws_elasticache_subnet_group.elasticache", shape = "box"]
		"[root] module.networking.module.vpc.aws_internet_gateway.this (expand)" [label = "module.networking.module.vpc.aws_internet_gateway.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_nat_gateway.this (expand)" [label = "module.networking.module.vpc.aws_nat_gateway.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl.database (expand)" [label = "module.networking.module.vpc.aws_network_acl.database", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl.elasticache (expand)" [label = "module.networking.module.vpc.aws_network_acl.elasticache", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl.intra (expand)" [label = "module.networking.module.vpc.aws_network_acl.intra", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl.private (expand)" [label = "module.networking.module.vpc.aws_network_acl.private", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl.public (expand)" [label = "module.networking.module.vpc.aws_network_acl.public", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl.redshift (expand)" [label = "module.networking.module.vpc.aws_network_acl.redshift", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.database_inbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.database_inbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.database_outbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.database_outbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.elasticache_inbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.elasticache_outbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.intra_inbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.intra_inbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.intra_outbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.intra_outbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.private_inbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.private_inbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.private_outbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.private_outbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.public_inbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.public_inbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.public_outbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.public_outbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.redshift_inbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.redshift_inbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_network_acl_rule.redshift_outbound (expand)" [label = "module.networking.module.vpc.aws_network_acl_rule.redshift_outbound", shape = "box"]
		"[root] module.networking.module.vpc.aws_redshift_subnet_group.redshift (expand)" [label = "module.networking.module.vpc.aws_redshift_subnet_group.redshift", shape = "box"]
		"[root] module.networking.module.vpc.aws_route.database_internet_gateway (expand)" [label = "module.networking.module.vpc.aws_route.database_internet_gateway", shape = "box"]
		"[root] module.networking.module.vpc.aws_route.database_nat_gateway (expand)" [label = "module.networking.module.vpc.aws_route.database_nat_gateway", shape = "box"]
		"[root] module.networking.module.vpc.aws_route.private_nat_gateway (expand)" [label = "module.networking.module.vpc.aws_route.private_nat_gateway", shape = "box"]
		"[root] module.networking.module.vpc.aws_route.public_internet_gateway (expand)" [label = "module.networking.module.vpc.aws_route.public_internet_gateway", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table.database (expand)" [label = "module.networking.module.vpc.aws_route_table.database", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table.elasticache (expand)" [label = "module.networking.module.vpc.aws_route_table.elasticache", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table.intra (expand)" [label = "module.networking.module.vpc.aws_route_table.intra", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table.private (expand)" [label = "module.networking.module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table.public (expand)" [label = "module.networking.module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table.redshift (expand)" [label = "module.networking.module.vpc.aws_route_table.redshift", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table_association.database (expand)" [label = "module.networking.module.vpc.aws_route_table_association.database", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table_association.elasticache (expand)" [label = "module.networking.module.vpc.aws_route_table_association.elasticache", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table_association.intra (expand)" [label = "module.networking.module.vpc.aws_route_table_association.intra", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table_association.private (expand)" [label = "module.networking.module.vpc.aws_route_table_association.private", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table_association.public (expand)" [label = "module.networking.module.vpc.aws_route_table_association.public", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table_association.redshift (expand)" [label = "module.networking.module.vpc.aws_route_table_association.redshift", shape = "box"]
		"[root] module.networking.module.vpc.aws_route_table_association.redshift_public (expand)" [label = "module.networking.module.vpc.aws_route_table_association.redshift_public", shape = "box"]
		"[root] module.networking.module.vpc.aws_subnet.database (expand)" [label = "module.networking.module.vpc.aws_subnet.database", shape = "box"]
		"[root] module.networking.module.vpc.aws_subnet.elasticache (expand)" [label = "module.networking.module.vpc.aws_subnet.elasticache", shape = "box"]
		"[root] module.networking.module.vpc.aws_subnet.intra (expand)" [label = "module.networking.module.vpc.aws_subnet.intra", shape = "box"]
		"[root] module.networking.module.vpc.aws_subnet.private (expand)" [label = "module.networking.module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.networking.module.vpc.aws_subnet.public (expand)" [label = "module.networking.module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.networking.module.vpc.aws_subnet.redshift (expand)" [label = "module.networking.module.vpc.aws_subnet.redshift", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" [label = "module.networking.module.vpc.aws_vpc.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" [label = "module.networking.module.vpc.aws_vpc_dhcp_options.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options_association.this (expand)" [label = "module.networking.module.vpc.aws_vpc_dhcp_options_association.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.apigw (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.apigw", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.cloudtrail (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.cloudtrail", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.dynamodb (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.dynamodb", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2 (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.ec2", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2messages (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.ec2messages", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_api (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.ecr_api", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.ecs", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_agent (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.ecs_agent", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.events (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.events", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.kms (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.kms", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.logs (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.logs", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.monitoring (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.monitoring", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.s3 (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.s3", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sns (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.sns", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sqs (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.sqs", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssm (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.ssm", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssmmessages (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint.ssmmessages", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_s3 (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_s3", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_s3 (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_s3", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_s3 (expand)" [label = "module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_s3", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" [label = "module.networking.module.vpc.aws_vpc_ipv4_cidr_block_association.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpn_gateway.this (expand)" [label = "module.networking.module.vpc.aws_vpn_gateway.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpn_gateway_attachment.this (expand)" [label = "module.networking.module.vpc.aws_vpn_gateway_attachment.this", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.private (expand)" [label = "module.networking.module.vpc.aws_vpn_gateway_route_propagation.private", shape = "box"]
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.public (expand)" [label = "module.networking.module.vpc.aws_vpn_gateway_route_propagation.public", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.apigw (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.apigw", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.cloudtrail (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.cloudtrail", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.dynamodb (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.dynamodb", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2 (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2messages (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2messages", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_api (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_api", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_dkr (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_dkr", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_agent (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_agent", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.events (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.events", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.kms (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.kms", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.logs (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.logs", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.monitoring (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.monitoring", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.s3 (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.s3", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sns (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.sns", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sqs (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.sqs", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssm (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.ssm", shape = "box"]
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssmmessages (expand)" [label = "module.networking.module.vpc.data.aws_vpc_endpoint_service.ssmmessages", shape = "box"]
		"[root] module.networking.module.websvr_sg.aws_security_group.security_group (expand)" [label = "module.networking.module.websvr_sg.aws_security_group.security_group", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/random\"]" [label = "provider[\"registry.terraform.io/hashicorp/random\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/template\"]" [label = "provider[\"registry.terraform.io/hashicorp/template\"]", shape = "diamond"]
		"[root] var.namespace" [label = "var.namespace", shape = "note"]
		"[root] var.region" [label = "var.region", shape = "note"]
		"[root] var.ssh_keypair" [label = "var.ssh_keypair", shape = "note"]
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.autoscaling (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.database (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.networking (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.db_password (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.lb_dns_name (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.aws_autoscaling_group.webserver (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.module.alb (close)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.module.iam_instance_profile (close)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.lb_dns_name (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.webserver (expand)" -> "[root] module.autoscaling.aws_launch_template.webserver (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.webserver (expand)" -> "[root] module.autoscaling.module.alb.output.target_group_arns (expand)"
		"[root] module.autoscaling.aws_launch_template.webserver (expand)" -> "[root] module.autoscaling.data.aws_ami.ubuntu (expand)"
		"[root] module.autoscaling.aws_launch_template.webserver (expand)" -> "[root] module.autoscaling.data.template_cloudinit_config.config (expand)"
		"[root] module.autoscaling.aws_launch_template.webserver (expand)" -> "[root] module.autoscaling.module.iam_instance_profile.output.name (expand)"
		"[root] module.autoscaling.aws_launch_template.webserver (expand)" -> "[root] module.autoscaling.var.namespace (expand)"
		"[root] module.autoscaling.aws_launch_template.webserver (expand)" -> "[root] module.autoscaling.var.sg (expand)"
		"[root] module.autoscaling.aws_launch_template.webserver (expand)" -> "[root] module.autoscaling.var.ssh_keypair (expand)"
		"[root] module.autoscaling.data.aws_ami.ubuntu (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.data.aws_ami.ubuntu (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.autoscaling.data.template_cloudinit_config.config (expand)" -> "[root] module.autoscaling.var.db_config (expand)"
		"[root] module.autoscaling.data.template_cloudinit_config.config (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/template\"]"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener_no_logs (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.dns_name (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.http_tcp_listener_arns (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.http_tcp_listener_ids (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.https_listener_arns (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.https_listener_ids (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.load_balancer_arn_suffix (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.load_balancer_id (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.load_balancer_zone_id (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.target_group_arn_suffixes (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.target_group_arns (expand)"
		"[root] module.autoscaling.module.alb (close)" -> "[root] module.autoscaling.module.alb.output.target_group_names (expand)"
		"[root] module.autoscaling.module.alb (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.create_alb (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.enable_cross_zone_load_balancing (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.enable_deletion_protection (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.enable_http2 (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.idle_timeout (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.ip_address_type (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_create_timeout (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_delete_timeout (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_is_internal (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_name (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_update_timeout (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.log_bucket_name (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.log_location_prefix (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.logging_enabled (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.security_groups (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.subnets (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application (expand)" -> "[root] module.autoscaling.module.alb.var.tags (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.create_alb (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.enable_cross_zone_load_balancing (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.enable_deletion_protection (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.enable_http2 (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.idle_timeout (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.ip_address_type (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_create_timeout (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_delete_timeout (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_is_internal (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_name (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.load_balancer_update_timeout (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.logging_enabled (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.security_groups (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.subnets (expand)"
		"[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.tags (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp (expand)" -> "[root] module.autoscaling.module.alb.var.http_tcp_listeners (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp (expand)" -> "[root] module.autoscaling.module.alb.var.http_tcp_listeners_count (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp_no_logs (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.http_tcp_listeners (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.http_tcp_listeners_count (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https (expand)" -> "[root] module.autoscaling.module.alb.var.https_listeners (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https (expand)" -> "[root] module.autoscaling.module.alb.var.https_listeners_count (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https (expand)" -> "[root] module.autoscaling.module.alb.var.listener_ssl_policy_default (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https_no_logs (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.https_listeners (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.https_listeners_count (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.listener_ssl_policy_default (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener (expand)" -> "[root] module.autoscaling.module.alb.var.extra_ssl_certs (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener (expand)" -> "[root] module.autoscaling.module.alb.var.extra_ssl_certs_count (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener_no_logs (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https_no_logs (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.extra_ssl_certs (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.extra_ssl_certs_count (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)" -> "[root] module.autoscaling.module.alb.var.target_groups (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)" -> "[root] module.autoscaling.module.alb.var.target_groups_count (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)" -> "[root] module.autoscaling.module.alb.var.target_groups_defaults (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)" -> "[root] module.autoscaling.module.alb.var.vpc_id (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.target_groups (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.target_groups_count (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.target_groups_defaults (expand)"
		"[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)" -> "[root] module.autoscaling.module.alb.var.vpc_id (expand)"
		"[root] module.autoscaling.module.alb.output.dns_name (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application (expand)"
		"[root] module.autoscaling.module.alb.output.dns_name (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.http_tcp_listener_arns (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp (expand)"
		"[root] module.autoscaling.module.alb.output.http_tcp_listener_arns (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.http_tcp_listener_ids (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp (expand)"
		"[root] module.autoscaling.module.alb.output.http_tcp_listener_ids (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.https_listener_arns (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https (expand)"
		"[root] module.autoscaling.module.alb.output.https_listener_arns (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.https_listener_ids (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https (expand)"
		"[root] module.autoscaling.module.alb.output.https_listener_ids (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_https_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.load_balancer_arn_suffix (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application (expand)"
		"[root] module.autoscaling.module.alb.output.load_balancer_arn_suffix (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.load_balancer_id (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application (expand)"
		"[root] module.autoscaling.module.alb.output.load_balancer_id (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.load_balancer_zone_id (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application (expand)"
		"[root] module.autoscaling.module.alb.output.load_balancer_zone_id (expand)" -> "[root] module.autoscaling.module.alb.aws_lb.application_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.target_group_arn_suffixes (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)"
		"[root] module.autoscaling.module.alb.output.target_group_arn_suffixes (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.target_group_arns (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)"
		"[root] module.autoscaling.module.alb.output.target_group_arns (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)"
		"[root] module.autoscaling.module.alb.output.target_group_names (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main (expand)"
		"[root] module.autoscaling.module.alb.output.target_group_names (expand)" -> "[root] module.autoscaling.module.alb.aws_lb_target_group.main_no_logs (expand)"
		"[root] module.autoscaling.module.alb.var.create_alb (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.enable_cross_zone_load_balancing (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.enable_deletion_protection (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.enable_http2 (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.extra_ssl_certs (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.extra_ssl_certs_count (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.http_tcp_listeners (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.http_tcp_listeners_count (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.https_listeners (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.https_listeners_count (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.idle_timeout (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.ip_address_type (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.listener_ssl_policy_default (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.load_balancer_create_timeout (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.load_balancer_delete_timeout (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.load_balancer_is_internal (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.load_balancer_name (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.load_balancer_name (expand)" -> "[root] module.autoscaling.var.namespace (expand)"
		"[root] module.autoscaling.module.alb.var.load_balancer_update_timeout (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.log_bucket_name (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.log_location_prefix (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.logging_enabled (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.security_groups (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.security_groups (expand)" -> "[root] module.autoscaling.var.sg (expand)"
		"[root] module.autoscaling.module.alb.var.subnets (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.subnets (expand)" -> "[root] module.autoscaling.var.vpc (expand)"
		"[root] module.autoscaling.module.alb.var.tags (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.target_groups (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.target_groups_count (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.target_groups_defaults (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.vpc_id (expand)" -> "[root] module.autoscaling.module.alb (expand)"
		"[root] module.autoscaling.module.alb.var.vpc_id (expand)" -> "[root] module.autoscaling.var.vpc (expand)"
		"[root] module.autoscaling.module.iam_instance_profile (close)" -> "[root] module.autoscaling.module.iam_instance_profile.aws_iam_role_policy.iam_role_policy (expand)"
		"[root] module.autoscaling.module.iam_instance_profile (close)" -> "[root] module.autoscaling.module.iam_instance_profile.output.name (expand)"
		"[root] module.autoscaling.module.iam_instance_profile (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.aws_iam_instance_profile.iam_instance_profile (expand)" -> "[root] module.autoscaling.module.iam_instance_profile.aws_iam_role.iam_role (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.aws_iam_role.iam_role (expand)" -> "[root] module.autoscaling.module.iam_instance_profile.var.name (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.aws_iam_role.iam_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.autoscaling.module.iam_instance_profile.aws_iam_role_policy.iam_role_policy (expand)" -> "[root] module.autoscaling.module.iam_instance_profile.aws_iam_role.iam_role (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.aws_iam_role_policy.iam_role_policy (expand)" -> "[root] module.autoscaling.module.iam_instance_profile.data.aws_iam_policy_document.iam_policy_document (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.data.aws_iam_policy_document.iam_policy_document (expand)" -> "[root] module.autoscaling.module.iam_instance_profile.var.actions (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.data.aws_iam_policy_document.iam_policy_document (expand)" -> "[root] module.autoscaling.module.iam_instance_profile.var.resources (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.data.aws_iam_policy_document.iam_policy_document (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.autoscaling.module.iam_instance_profile.output.name (expand)" -> "[root] module.autoscaling.module.iam_instance_profile.aws_iam_instance_profile.iam_instance_profile (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.var.actions (expand)" -> "[root] module.autoscaling.module.iam_instance_profile (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.var.name (expand)" -> "[root] module.autoscaling.module.iam_instance_profile (expand)"
		"[root] module.autoscaling.module.iam_instance_profile.var.resources (expand)" -> "[root] module.autoscaling.module.iam_instance_profile (expand)"
		"[root] module.autoscaling.output.lb_dns_name (expand)" -> "[root] module.autoscaling.module.alb.output.dns_name (expand)"
		"[root] module.autoscaling.var.db_config (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.db_config (expand)" -> "[root] module.database.output.db_config (expand)"
		"[root] module.autoscaling.var.namespace (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.namespace (expand)" -> "[root] var.namespace"
		"[root] module.autoscaling.var.sg (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.sg (expand)" -> "[root] module.networking.output.sg (expand)"
		"[root] module.autoscaling.var.ssh_keypair (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.ssh_keypair (expand)" -> "[root] var.ssh_keypair"
		"[root] module.autoscaling.var.vpc (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.vpc (expand)" -> "[root] module.networking.output.vpc (expand)"
		"[root] module.database (close)" -> "[root] module.database.output.db_config (expand)"
		"[root] module.database.aws_db_instance.database (expand)" -> "[root] module.database.local.db_password (expand)"
		"[root] module.database.aws_db_instance.database (expand)" -> "[root] module.database.var.namespace (expand)"
		"[root] module.database.aws_db_instance.database (expand)" -> "[root] module.database.var.sg (expand)"
		"[root] module.database.aws_db_instance.database (expand)" -> "[root] module.database.var.vpc (expand)"
		"[root] module.database.local.db_password (expand)" -> "[root] module.database.random_id.random_16 (expand)"
		"[root] module.database.output.db_config (expand)" -> "[root] module.database.aws_db_instance.database (expand)"
		"[root] module.database.random_id.random_16 (expand)" -> "[root] module.database (expand)"
		"[root] module.database.random_id.random_16 (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] module.database.var.namespace (expand)" -> "[root] module.database (expand)"
		"[root] module.database.var.namespace (expand)" -> "[root] var.namespace"
		"[root] module.database.var.sg (expand)" -> "[root] module.database (expand)"
		"[root] module.database.var.sg (expand)" -> "[root] module.networking.output.sg (expand)"
		"[root] module.database.var.vpc (expand)" -> "[root] module.database (expand)"
		"[root] module.database.var.vpc (expand)" -> "[root] module.networking.output.vpc (expand)"
		"[root] module.networking (close)" -> "[root] module.networking.module.db_sg (close)"
		"[root] module.networking (close)" -> "[root] module.networking.module.lb_sg (close)"
		"[root] module.networking (close)" -> "[root] module.networking.module.websvr_sg (close)"
		"[root] module.networking (close)" -> "[root] module.networking.output.sg (expand)"
		"[root] module.networking (close)" -> "[root] module.networking.output.vpc (expand)"
		"[root] module.networking.data.aws_availability_zones.available (expand)" -> "[root] module.networking (expand)"
		"[root] module.networking.data.aws_availability_zones.available (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.db_sg (close)" -> "[root] module.networking.module.db_sg.output.security_group (expand)"
		"[root] module.networking.module.db_sg (expand)" -> "[root] module.networking (expand)"
		"[root] module.networking.module.db_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.db_sg.local.egress_rules (expand)"
		"[root] module.networking.module.db_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.db_sg.local.ingress_rules (expand)"
		"[root] module.networking.module.db_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.db_sg.var.description (expand)"
		"[root] module.networking.module.db_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.db_sg.var.name (expand)"
		"[root] module.networking.module.db_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.db_sg.var.vpc_id (expand)"
		"[root] module.networking.module.db_sg.local.egress_rules (expand)" -> "[root] module.networking.module.db_sg.var.egress_rules (expand)"
		"[root] module.networking.module.db_sg.local.ingress_rules (expand)" -> "[root] module.networking.module.db_sg.var.ingress_rules (expand)"
		"[root] module.networking.module.db_sg.output.security_group (expand)" -> "[root] module.networking.module.db_sg.aws_security_group.security_group (expand)"
		"[root] module.networking.module.db_sg.var.description (expand)" -> "[root] module.networking.module.db_sg (expand)"
		"[root] module.networking.module.db_sg.var.egress_rules (expand)" -> "[root] module.networking.module.db_sg (expand)"
		"[root] module.networking.module.db_sg.var.ingress_rules (expand)" -> "[root] module.networking.module.db_sg (expand)"
		"[root] module.networking.module.db_sg.var.ingress_rules (expand)" -> "[root] module.networking.module.websvr_sg.output.security_group (expand)"
		"[root] module.networking.module.db_sg.var.name (expand)" -> "[root] module.networking.module.db_sg (expand)"
		"[root] module.networking.module.db_sg.var.vpc_id (expand)" -> "[root] module.networking.module.db_sg (expand)"
		"[root] module.networking.module.db_sg.var.vpc_id (expand)" -> "[root] module.networking.module.vpc.output.vpc_id (expand)"
		"[root] module.networking.module.lb_sg (close)" -> "[root] module.networking.module.lb_sg.output.security_group (expand)"
		"[root] module.networking.module.lb_sg (expand)" -> "[root] module.networking (expand)"
		"[root] module.networking.module.lb_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.lb_sg.local.egress_rules (expand)"
		"[root] module.networking.module.lb_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.lb_sg.local.ingress_rules (expand)"
		"[root] module.networking.module.lb_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.lb_sg.var.description (expand)"
		"[root] module.networking.module.lb_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.lb_sg.var.name (expand)"
		"[root] module.networking.module.lb_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.lb_sg.var.vpc_id (expand)"
		"[root] module.networking.module.lb_sg.local.egress_rules (expand)" -> "[root] module.networking.module.lb_sg.var.egress_rules (expand)"
		"[root] module.networking.module.lb_sg.local.ingress_rules (expand)" -> "[root] module.networking.module.lb_sg.var.ingress_rules (expand)"
		"[root] module.networking.module.lb_sg.output.security_group (expand)" -> "[root] module.networking.module.lb_sg.aws_security_group.security_group (expand)"
		"[root] module.networking.module.lb_sg.var.description (expand)" -> "[root] module.networking.module.lb_sg (expand)"
		"[root] module.networking.module.lb_sg.var.egress_rules (expand)" -> "[root] module.networking.module.lb_sg (expand)"
		"[root] module.networking.module.lb_sg.var.ingress_rules (expand)" -> "[root] module.networking.module.lb_sg (expand)"
		"[root] module.networking.module.lb_sg.var.name (expand)" -> "[root] module.networking.module.lb_sg (expand)"
		"[root] module.networking.module.lb_sg.var.vpc_id (expand)" -> "[root] module.networking.module.lb_sg (expand)"
		"[root] module.networking.module.lb_sg.var.vpc_id (expand)" -> "[root] module.networking.module.vpc.output.vpc_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_default_network_acl.this (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route_table_association.database (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route_table_association.intra (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route_table_association.private (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route_table_association.public (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route_table_association.redshift (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_s3 (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_s3 (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_s3 (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.azs (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.database_network_acl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.database_route_table_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.database_subnet_arns (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.database_subnet_group (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.database_subnets (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.database_subnets_cidr_blocks (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_network_acl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_route_table_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_security_group_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_vpc_cidr_block (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_vpc_default_network_acl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_vpc_default_route_table_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_vpc_default_security_group_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_vpc_enable_dns_support (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_vpc_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_vpc_instance_tenancy (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.default_vpc_main_route_table_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.elasticache_network_acl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.elasticache_route_table_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.elasticache_subnet_arns (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.elasticache_subnet_group (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.elasticache_subnet_group_name (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.elasticache_subnets (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.elasticache_subnets_cidr_blocks (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.igw_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.intra_network_acl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.intra_route_table_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.intra_subnet_arns (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.intra_subnets (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.intra_subnets_cidr_blocks (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.nat_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.nat_public_ips (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.natgw_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.private_network_acl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.private_route_table_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.private_subnet_arns (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.private_subnets (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.private_subnets_cidr_blocks (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.public_network_acl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.public_route_table_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.public_subnet_arns (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.public_subnets (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.public_subnets_cidr_blocks (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.redshift_network_acl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.redshift_route_table_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.redshift_subnet_arns (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.redshift_subnet_group (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.redshift_subnets (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.redshift_subnets_cidr_blocks (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vgw_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_arn (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_cidr_block (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_enable_dns_hostnames (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_enable_dns_support (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_apigw_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_apigw_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_apigw_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_cloudtrail_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_cloudtrail_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_cloudtrail_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_dynamodb_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_dynamodb_pl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ec2_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ec2_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ec2_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ec2messages_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ec2messages_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ec2messages_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecr_api_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecr_api_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecr_api_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecr_dkr_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecr_dkr_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecr_dkr_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecs_agent_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecs_agent_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecs_agent_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecs_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecs_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecs_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecs_telemetry_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecs_telemetry_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ecs_telemetry_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_elasticloadbalancing_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_elasticloadbalancing_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_elasticloadbalancing_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_events_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_events_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_events_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_kms_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_kms_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_kms_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_logs_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_logs_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_logs_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_monitoring_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_monitoring_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_monitoring_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_s3_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_s3_pl_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_sns_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_sns_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_sns_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_sqs_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_sqs_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_sqs_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ssm_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ssm_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ssm_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ssmmessages_dns_entry (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ssmmessages_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_endpoint_ssmmessages_network_interface_ids (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_instance_tenancy (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_main_route_table_id (expand)"
		"[root] module.networking.module.vpc (close)" -> "[root] module.networking.module.vpc.output.vpc_secondary_cidr_blocks (expand)"
		"[root] module.networking.module.vpc (expand)" -> "[root] module.networking (expand)"
		"[root] module.networking.module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.networking.module.vpc.aws_subnet.database (expand)"
		"[root] module.networking.module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.networking.module.vpc.var.create_database_subnet_group (expand)"
		"[root] module.networking.module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.networking.module.vpc.var.database_subnet_group_tags (expand)"
		"[root] module.networking.module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.networking.module.vpc.var.default_network_acl_egress (expand)"
		"[root] module.networking.module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.networking.module.vpc.var.default_network_acl_ingress (expand)"
		"[root] module.networking.module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.networking.module.vpc.var.default_network_acl_name (expand)"
		"[root] module.networking.module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.networking.module.vpc.var.default_network_acl_tags (expand)"
		"[root] module.networking.module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.networking.module.vpc.var.manage_default_network_acl (expand)"
		"[root] module.networking.module.vpc.aws_default_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.default_vpc_enable_classiclink (expand)"
		"[root] module.networking.module.vpc.aws_default_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.networking.module.vpc.aws_default_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.default_vpc_enable_dns_support (expand)"
		"[root] module.networking.module.vpc.aws_default_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.default_vpc_name (expand)"
		"[root] module.networking.module.vpc.aws_default_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.default_vpc_tags (expand)"
		"[root] module.networking.module.vpc.aws_default_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.manage_default_vpc (expand)"
		"[root] module.networking.module.vpc.aws_default_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.tags (expand)"
		"[root] module.networking.module.vpc.aws_default_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.aws_eip.nat (expand)" -> "[root] module.networking.module.vpc.local.nat_gateway_count (expand)"
		"[root] module.networking.module.vpc.aws_eip.nat (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.aws_eip.nat (expand)" -> "[root] module.networking.module.vpc.var.enable_nat_gateway (expand)"
		"[root] module.networking.module.vpc.aws_eip.nat (expand)" -> "[root] module.networking.module.vpc.var.name (expand)"
		"[root] module.networking.module.vpc.aws_eip.nat (expand)" -> "[root] module.networking.module.vpc.var.nat_eip_tags (expand)"
		"[root] module.networking.module.vpc.aws_eip.nat (expand)" -> "[root] module.networking.module.vpc.var.reuse_nat_ips (expand)"
		"[root] module.networking.module.vpc.aws_eip.nat (expand)" -> "[root] module.networking.module.vpc.var.tags (expand)"
		"[root] module.networking.module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.networking.module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.networking.module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.networking.module.vpc.var.create_elasticache_subnet_group (expand)"
		"[root] module.networking.module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.networking.module.vpc.var.igw_tags (expand)"
		"[root] module.networking.module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.networking.module.vpc.var.public_subnets (expand)"
		"[root] module.networking.module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.networking.module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.networking.module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.networking.module.vpc.aws_subnet.public (expand)"
		"[root] module.networking.module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.networking.module.vpc.local.nat_gateway_ips (expand)"
		"[root] module.networking.module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.networking.module.vpc.var.nat_gateway_tags (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.database (expand)" -> "[root] module.networking.module.vpc.aws_subnet.database (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.database (expand)" -> "[root] module.networking.module.vpc.var.database_acl_tags (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.database (expand)" -> "[root] module.networking.module.vpc.var.database_dedicated_network_acl (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.networking.module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.networking.module.vpc.var.elasticache_acl_tags (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.networking.module.vpc.var.elasticache_dedicated_network_acl (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.intra (expand)" -> "[root] module.networking.module.vpc.aws_subnet.intra (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.intra (expand)" -> "[root] module.networking.module.vpc.var.intra_acl_tags (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.intra (expand)" -> "[root] module.networking.module.vpc.var.intra_dedicated_network_acl (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.private (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.private (expand)" -> "[root] module.networking.module.vpc.var.private_acl_tags (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.private (expand)" -> "[root] module.networking.module.vpc.var.private_dedicated_network_acl (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.public (expand)" -> "[root] module.networking.module.vpc.aws_subnet.public (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.public (expand)" -> "[root] module.networking.module.vpc.var.public_acl_tags (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.public (expand)" -> "[root] module.networking.module.vpc.var.public_dedicated_network_acl (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.networking.module.vpc.aws_subnet.redshift (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.networking.module.vpc.var.redshift_acl_tags (expand)"
		"[root] module.networking.module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.networking.module.vpc.var.redshift_dedicated_network_acl (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.database (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.networking.module.vpc.var.database_inbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.database (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.networking.module.vpc.var.database_outbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.networking.module.vpc.var.elasticache_inbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.networking.module.vpc.var.elasticache_outbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.intra (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.networking.module.vpc.var.intra_inbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.intra (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.networking.module.vpc.var.intra_outbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.private (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.networking.module.vpc.var.private_inbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.private (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.networking.module.vpc.var.private_outbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.public (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.networking.module.vpc.var.public_inbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.public (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.networking.module.vpc.var.public_outbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.networking.module.vpc.var.redshift_inbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.networking.module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.networking.module.vpc.var.redshift_outbound_acl_rules (expand)"
		"[root] module.networking.module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.networking.module.vpc.aws_subnet.redshift (expand)"
		"[root] module.networking.module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.networking.module.vpc.var.create_redshift_subnet_group (expand)"
		"[root] module.networking.module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.networking.module.vpc.var.redshift_subnet_group_tags (expand)"
		"[root] module.networking.module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.networking.module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.networking.module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.networking.module.vpc.aws_route_table.database (expand)"
		"[root] module.networking.module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.networking.module.vpc.var.create_database_internet_gateway_route (expand)"
		"[root] module.networking.module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.networking.module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.networking.module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.networking.module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.networking.module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.networking.module.vpc.var.create_database_internet_gateway_route (expand)"
		"[root] module.networking.module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.networking.module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.networking.module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.networking.module.vpc.var.create_database_subnet_route_table (expand)"
		"[root] module.networking.module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.networking.module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.networking.module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.networking.module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.networking.module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.networking.module.vpc.aws_route_table.public (expand)"
		"[root] module.networking.module.vpc.aws_route_table.database (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_route_table.database (expand)" -> "[root] module.networking.module.vpc.var.create_database_subnet_route_table (expand)"
		"[root] module.networking.module.vpc.aws_route_table.database (expand)" -> "[root] module.networking.module.vpc.var.database_route_table_tags (expand)"
		"[root] module.networking.module.vpc.aws_route_table.database (expand)" -> "[root] module.networking.module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_route_table.database (expand)" -> "[root] module.networking.module.vpc.var.database_subnets (expand)"
		"[root] module.networking.module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.networking.module.vpc.var.create_elasticache_subnet_route_table (expand)"
		"[root] module.networking.module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.networking.module.vpc.var.elasticache_route_table_tags (expand)"
		"[root] module.networking.module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.networking.module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.networking.module.vpc.var.elasticache_subnets (expand)"
		"[root] module.networking.module.vpc.aws_route_table.intra (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_route_table.intra (expand)" -> "[root] module.networking.module.vpc.var.intra_route_table_tags (expand)"
		"[root] module.networking.module.vpc.aws_route_table.intra (expand)" -> "[root] module.networking.module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_route_table.intra (expand)" -> "[root] module.networking.module.vpc.var.intra_subnets (expand)"
		"[root] module.networking.module.vpc.aws_route_table.private (expand)" -> "[root] module.networking.module.vpc.local.nat_gateway_count (expand)"
		"[root] module.networking.module.vpc.aws_route_table.private (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_route_table.private (expand)" -> "[root] module.networking.module.vpc.var.private_route_table_tags (expand)"
		"[root] module.networking.module.vpc.aws_route_table.private (expand)" -> "[root] module.networking.module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_route_table.public (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_route_table.public (expand)" -> "[root] module.networking.module.vpc.var.public_route_table_tags (expand)"
		"[root] module.networking.module.vpc.aws_route_table.public (expand)" -> "[root] module.networking.module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_route_table.public (expand)" -> "[root] module.networking.module.vpc.var.public_subnets (expand)"
		"[root] module.networking.module.vpc.aws_route_table.redshift (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_route_table.redshift (expand)" -> "[root] module.networking.module.vpc.var.create_redshift_subnet_route_table (expand)"
		"[root] module.networking.module.vpc.aws_route_table.redshift (expand)" -> "[root] module.networking.module.vpc.var.redshift_route_table_tags (expand)"
		"[root] module.networking.module.vpc.aws_route_table.redshift (expand)" -> "[root] module.networking.module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_route_table.redshift (expand)" -> "[root] module.networking.module.vpc.var.redshift_subnets (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.database (expand)" -> "[root] module.networking.module.vpc.aws_route_table.database (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.database (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.database (expand)" -> "[root] module.networking.module.vpc.aws_subnet.database (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.networking.module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.networking.module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.networking.module.vpc.aws_route_table.intra (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.networking.module.vpc.aws_subnet.intra (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.private (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.private (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.public (expand)" -> "[root] module.networking.module.vpc.aws_route_table.public (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.public (expand)" -> "[root] module.networking.module.vpc.aws_subnet.public (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.networking.module.vpc.aws_route_table.redshift (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.networking.module.vpc.aws_subnet.redshift (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.networking.module.vpc.var.enable_public_redshift (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.networking.module.vpc.aws_route_table.public (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.networking.module.vpc.aws_route_table.redshift (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.networking.module.vpc.aws_subnet.redshift (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.networking.module.vpc.var.enable_public_redshift (expand)"
		"[root] module.networking.module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.networking.module.vpc.var.single_nat_gateway (expand)"
		"[root] module.networking.module.vpc.aws_subnet.database (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_subnet.database (expand)" -> "[root] module.networking.module.vpc.var.azs (expand)"
		"[root] module.networking.module.vpc.aws_subnet.database (expand)" -> "[root] module.networking.module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_subnet.database (expand)" -> "[root] module.networking.module.vpc.var.database_subnet_tags (expand)"
		"[root] module.networking.module.vpc.aws_subnet.database (expand)" -> "[root] module.networking.module.vpc.var.database_subnets (expand)"
		"[root] module.networking.module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.networking.module.vpc.var.azs (expand)"
		"[root] module.networking.module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.networking.module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.networking.module.vpc.var.elasticache_subnet_tags (expand)"
		"[root] module.networking.module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.networking.module.vpc.var.elasticache_subnets (expand)"
		"[root] module.networking.module.vpc.aws_subnet.intra (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_subnet.intra (expand)" -> "[root] module.networking.module.vpc.var.azs (expand)"
		"[root] module.networking.module.vpc.aws_subnet.intra (expand)" -> "[root] module.networking.module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_subnet.intra (expand)" -> "[root] module.networking.module.vpc.var.intra_subnet_tags (expand)"
		"[root] module.networking.module.vpc.aws_subnet.intra (expand)" -> "[root] module.networking.module.vpc.var.intra_subnets (expand)"
		"[root] module.networking.module.vpc.aws_subnet.private (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_subnet.private (expand)" -> "[root] module.networking.module.vpc.var.azs (expand)"
		"[root] module.networking.module.vpc.aws_subnet.private (expand)" -> "[root] module.networking.module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_subnet.private (expand)" -> "[root] module.networking.module.vpc.var.private_subnet_tags (expand)"
		"[root] module.networking.module.vpc.aws_subnet.private (expand)" -> "[root] module.networking.module.vpc.var.private_subnets (expand)"
		"[root] module.networking.module.vpc.aws_subnet.public (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_subnet.public (expand)" -> "[root] module.networking.module.vpc.var.azs (expand)"
		"[root] module.networking.module.vpc.aws_subnet.public (expand)" -> "[root] module.networking.module.vpc.var.map_public_ip_on_launch (expand)"
		"[root] module.networking.module.vpc.aws_subnet.public (expand)" -> "[root] module.networking.module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.networking.module.vpc.aws_subnet.public (expand)" -> "[root] module.networking.module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_subnet.public (expand)" -> "[root] module.networking.module.vpc.var.public_subnet_tags (expand)"
		"[root] module.networking.module.vpc.aws_subnet.public (expand)" -> "[root] module.networking.module.vpc.var.public_subnets (expand)"
		"[root] module.networking.module.vpc.aws_subnet.redshift (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_subnet.redshift (expand)" -> "[root] module.networking.module.vpc.var.azs (expand)"
		"[root] module.networking.module.vpc.aws_subnet.redshift (expand)" -> "[root] module.networking.module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.networking.module.vpc.aws_subnet.redshift (expand)" -> "[root] module.networking.module.vpc.var.redshift_subnet_tags (expand)"
		"[root] module.networking.module.vpc.aws_subnet.redshift (expand)" -> "[root] module.networking.module.vpc.var.redshift_subnets (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.assign_generated_ipv6_cidr_block (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.cidr (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.enable_dns_hostnames (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.enable_dns_support (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.instance_tenancy (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.name (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.tags (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] module.networking.module.vpc.var.vpc_tags (expand)"
		"[root] module.networking.module.vpc.aws_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.dhcp_options_domain_name (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.dhcp_options_domain_name_servers (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.dhcp_options_netbios_name_servers (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.dhcp_options_netbios_node_type (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.dhcp_options_ntp_servers (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.dhcp_options_tags (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.enable_dhcp_options (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.name (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.networking.module.vpc.var.tags (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.networking.module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.networking.module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.apigw (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.apigw (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.apigw (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.apigw (expand)" -> "[root] module.networking.module.vpc.var.apigw_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.apigw (expand)" -> "[root] module.networking.module.vpc.var.apigw_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.apigw (expand)" -> "[root] module.networking.module.vpc.var.apigw_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.cloudtrail (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.cloudtrail (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.cloudtrail (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.cloudtrail (expand)" -> "[root] module.networking.module.vpc.var.cloudtrail_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.cloudtrail (expand)" -> "[root] module.networking.module.vpc.var.cloudtrail_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.cloudtrail (expand)" -> "[root] module.networking.module.vpc.var.cloudtrail_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.dynamodb (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.dynamodb (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.dynamodb (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2 (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.networking.module.vpc.var.ec2_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.networking.module.vpc.var.ec2_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.networking.module.vpc.var.ec2_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2messages (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2messages (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2messages (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2messages (expand)" -> "[root] module.networking.module.vpc.var.ec2messages_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2messages (expand)" -> "[root] module.networking.module.vpc.var.ec2messages_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ec2messages (expand)" -> "[root] module.networking.module.vpc.var.ec2messages_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_api (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_api (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_api (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_api (expand)" -> "[root] module.networking.module.vpc.var.ecr_api_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_api (expand)" -> "[root] module.networking.module.vpc.var.ecr_api_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_api (expand)" -> "[root] module.networking.module.vpc.var.ecr_api_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_dkr (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr (expand)" -> "[root] module.networking.module.vpc.var.ecr_dkr_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr (expand)" -> "[root] module.networking.module.vpc.var.ecr_dkr_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr (expand)" -> "[root] module.networking.module.vpc.var.ecr_dkr_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs (expand)" -> "[root] module.networking.module.vpc.var.ecs_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs (expand)" -> "[root] module.networking.module.vpc.var.ecs_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs (expand)" -> "[root] module.networking.module.vpc.var.ecs_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_agent (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_agent (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_agent (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_agent (expand)" -> "[root] module.networking.module.vpc.var.ecs_agent_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_agent (expand)" -> "[root] module.networking.module.vpc.var.ecs_agent_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_agent (expand)" -> "[root] module.networking.module.vpc.var.ecs_agent_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry (expand)" -> "[root] module.networking.module.vpc.var.ecs_telemetry_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry (expand)" -> "[root] module.networking.module.vpc.var.ecs_telemetry_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry (expand)" -> "[root] module.networking.module.vpc.var.ecs_telemetry_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing (expand)" -> "[root] module.networking.module.vpc.var.elasticloadbalancing_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing (expand)" -> "[root] module.networking.module.vpc.var.elasticloadbalancing_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing (expand)" -> "[root] module.networking.module.vpc.var.elasticloadbalancing_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.events (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.events (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.events (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.events (expand)" -> "[root] module.networking.module.vpc.var.events_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.events (expand)" -> "[root] module.networking.module.vpc.var.events_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.events (expand)" -> "[root] module.networking.module.vpc.var.events_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.kms (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.kms (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.kms (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.kms (expand)" -> "[root] module.networking.module.vpc.var.kms_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.kms (expand)" -> "[root] module.networking.module.vpc.var.kms_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.kms (expand)" -> "[root] module.networking.module.vpc.var.kms_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.logs (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.logs (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.logs (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.logs (expand)" -> "[root] module.networking.module.vpc.var.logs_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.logs (expand)" -> "[root] module.networking.module.vpc.var.logs_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.logs (expand)" -> "[root] module.networking.module.vpc.var.logs_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.monitoring (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.monitoring (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.monitoring (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.monitoring (expand)" -> "[root] module.networking.module.vpc.var.monitoring_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.monitoring (expand)" -> "[root] module.networking.module.vpc.var.monitoring_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.monitoring (expand)" -> "[root] module.networking.module.vpc.var.monitoring_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.s3 (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.s3 (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.s3 (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sns (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sns (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sns (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sns (expand)" -> "[root] module.networking.module.vpc.var.sns_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sns (expand)" -> "[root] module.networking.module.vpc.var.sns_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sns (expand)" -> "[root] module.networking.module.vpc.var.sns_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sqs (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sqs (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sqs (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sqs (expand)" -> "[root] module.networking.module.vpc.var.sqs_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sqs (expand)" -> "[root] module.networking.module.vpc.var.sqs_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.sqs (expand)" -> "[root] module.networking.module.vpc.var.sqs_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssm (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssm (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssm (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssm (expand)" -> "[root] module.networking.module.vpc.var.ssm_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssm (expand)" -> "[root] module.networking.module.vpc.var.ssm_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssm (expand)" -> "[root] module.networking.module.vpc.var.ssm_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssmmessages (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssmmessages (expand)" -> "[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssmmessages (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssmmessages (expand)" -> "[root] module.networking.module.vpc.var.ssmmessages_endpoint_private_dns_enabled (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssmmessages (expand)" -> "[root] module.networking.module.vpc.var.ssmmessages_endpoint_security_group_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint.ssmmessages (expand)" -> "[root] module.networking.module.vpc.var.ssmmessages_endpoint_subnet_ids (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb (expand)" -> "[root] module.networking.module.vpc.aws_route_table.intra (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.dynamodb (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_s3 (expand)" -> "[root] module.networking.module.vpc.aws_route_table.intra (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.intra_s3 (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.s3 (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.dynamodb (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_s3 (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.private_s3 (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.s3 (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb (expand)" -> "[root] module.networking.module.vpc.aws_route_table.public (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.dynamodb (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_s3 (expand)" -> "[root] module.networking.module.vpc.aws_route_table.public (expand)"
		"[root] module.networking.module.vpc.aws_vpc_endpoint_route_table_association.public_s3 (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.s3 (expand)"
		"[root] module.networking.module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.networking.module.vpc.var.secondary_cidr_blocks (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.networking.module.vpc.var.amazon_side_asn (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.networking.module.vpc.var.enable_vpn_gateway (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.networking.module.vpc.var.vpn_gateway_tags (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.networking.module.vpc.local.vpc_id (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.networking.module.vpc.var.vpn_gateway_id (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.networking.module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.networking.module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.networking.module.vpc.var.propagate_private_route_tables_vgw (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.networking.module.vpc.aws_route_table.public (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.networking.module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.networking.module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.networking.module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.networking.module.vpc.var.propagate_public_route_tables_vgw (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.apigw (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.apigw (expand)" -> "[root] module.networking.module.vpc.var.enable_apigw_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.apigw (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.cloudtrail (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.cloudtrail (expand)" -> "[root] module.networking.module.vpc.var.enable_cloudtrail_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.cloudtrail (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.dynamodb (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.dynamodb (expand)" -> "[root] module.networking.module.vpc.var.enable_dynamodb_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.dynamodb (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2 (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2 (expand)" -> "[root] module.networking.module.vpc.var.enable_ec2_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2 (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2messages (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2messages (expand)" -> "[root] module.networking.module.vpc.var.enable_ec2messages_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ec2messages (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_api (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_api (expand)" -> "[root] module.networking.module.vpc.var.enable_ecr_api_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_api (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_dkr (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_dkr (expand)" -> "[root] module.networking.module.vpc.var.enable_ecr_dkr_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecr_dkr (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs (expand)" -> "[root] module.networking.module.vpc.var.enable_ecs_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_agent (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_agent (expand)" -> "[root] module.networking.module.vpc.var.enable_ecs_agent_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_agent (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry (expand)" -> "[root] module.networking.module.vpc.var.enable_ecs_telemetry_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing (expand)" -> "[root] module.networking.module.vpc.var.enable_elasticloadbalancing_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.events (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.events (expand)" -> "[root] module.networking.module.vpc.var.enable_events_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.events (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.kms (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.kms (expand)" -> "[root] module.networking.module.vpc.var.enable_kms_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.kms (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.logs (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.logs (expand)" -> "[root] module.networking.module.vpc.var.enable_logs_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.logs (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.monitoring (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.monitoring (expand)" -> "[root] module.networking.module.vpc.var.enable_monitoring_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.monitoring (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.s3 (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.s3 (expand)" -> "[root] module.networking.module.vpc.var.enable_s3_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.s3 (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sns (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sns (expand)" -> "[root] module.networking.module.vpc.var.enable_sns_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sns (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sqs (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sqs (expand)" -> "[root] module.networking.module.vpc.var.enable_sqs_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.sqs (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssm (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssm (expand)" -> "[root] module.networking.module.vpc.var.enable_ssm_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssm (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssmmessages (expand)" -> "[root] module.networking.module.vpc.var.create_vpc (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssmmessages (expand)" -> "[root] module.networking.module.vpc.var.enable_ssmmessages_endpoint (expand)"
		"[root] module.networking.module.vpc.data.aws_vpc_endpoint_service.ssmmessages (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.networking.module.vpc.local.max_subnet_length (expand)" -> "[root] module.networking.module.vpc.var.database_subnets (expand)"
		"[root] module.networking.module.vpc.local.max_subnet_length (expand)" -> "[root] module.networking.module.vpc.var.elasticache_subnets (expand)"
		"[root] module.networking.module.vpc.local.max_subnet_length (expand)" -> "[root] module.networking.module.vpc.var.private_subnets (expand)"
		"[root] module.networking.module.vpc.local.max_subnet_length (expand)" -> "[root] module.networking.module.vpc.var.redshift_subnets (expand)"
		"[root] module.networking.module.vpc.local.nat_gateway_count (expand)" -> "[root] module.networking.module.vpc.local.max_subnet_length (expand)"
		"[root] module.networking.module.vpc.local.nat_gateway_count (expand)" -> "[root] module.networking.module.vpc.var.azs (expand)"
		"[root] module.networking.module.vpc.local.nat_gateway_count (expand)" -> "[root] module.networking.module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.networking.module.vpc.local.nat_gateway_count (expand)" -> "[root] module.networking.module.vpc.var.single_nat_gateway (expand)"
		"[root] module.networking.module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.networking.module.vpc.aws_eip.nat (expand)"
		"[root] module.networking.module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.networking.module.vpc.var.external_nat_ip_ids (expand)"
		"[root] module.networking.module.vpc.local.vpc_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.networking.module.vpc.output.azs (expand)" -> "[root] module.networking.module.vpc.var.azs (expand)"
		"[root] module.networking.module.vpc.output.database_network_acl_id (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.database (expand)"
		"[root] module.networking.module.vpc.output.database_route_table_ids (expand)" -> "[root] module.networking.module.vpc.aws_route_table.database (expand)"
		"[root] module.networking.module.vpc.output.database_route_table_ids (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.output.database_subnet_arns (expand)" -> "[root] module.networking.module.vpc.aws_subnet.database (expand)"
		"[root] module.networking.module.vpc.output.database_subnet_group (expand)" -> "[root] module.networking.module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.networking.module.vpc.output.database_subnets (expand)" -> "[root] module.networking.module.vpc.aws_subnet.database (expand)"
		"[root] module.networking.module.vpc.output.database_subnets_cidr_blocks (expand)" -> "[root] module.networking.module.vpc.aws_subnet.database (expand)"
		"[root] module.networking.module.vpc.output.default_network_acl_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_route_table_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_security_group_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_vpc_cidr_block (expand)" -> "[root] module.networking.module.vpc.aws_default_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_vpc_default_network_acl_id (expand)" -> "[root] module.networking.module.vpc.aws_default_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_vpc_default_route_table_id (expand)" -> "[root] module.networking.module.vpc.aws_default_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_vpc_default_security_group_id (expand)" -> "[root] module.networking.module.vpc.aws_default_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.networking.module.vpc.aws_default_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_vpc_enable_dns_support (expand)" -> "[root] module.networking.module.vpc.aws_default_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_vpc_id (expand)" -> "[root] module.networking.module.vpc.aws_default_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_vpc_instance_tenancy (expand)" -> "[root] module.networking.module.vpc.aws_default_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.default_vpc_main_route_table_id (expand)" -> "[root] module.networking.module.vpc.aws_default_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.elasticache_network_acl_id (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.networking.module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.networking.module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.networking.module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.output.elasticache_subnet_arns (expand)" -> "[root] module.networking.module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.networking.module.vpc.output.elasticache_subnet_group (expand)" -> "[root] module.networking.module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.networking.module.vpc.output.elasticache_subnet_group_name (expand)" -> "[root] module.networking.module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.networking.module.vpc.output.elasticache_subnets (expand)" -> "[root] module.networking.module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.networking.module.vpc.output.elasticache_subnets_cidr_blocks (expand)" -> "[root] module.networking.module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.networking.module.vpc.output.igw_id (expand)" -> "[root] module.networking.module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.networking.module.vpc.output.intra_network_acl_id (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.intra (expand)"
		"[root] module.networking.module.vpc.output.intra_route_table_ids (expand)" -> "[root] module.networking.module.vpc.aws_route_table.intra (expand)"
		"[root] module.networking.module.vpc.output.intra_subnet_arns (expand)" -> "[root] module.networking.module.vpc.aws_subnet.intra (expand)"
		"[root] module.networking.module.vpc.output.intra_subnets (expand)" -> "[root] module.networking.module.vpc.aws_subnet.intra (expand)"
		"[root] module.networking.module.vpc.output.intra_subnets_cidr_blocks (expand)" -> "[root] module.networking.module.vpc.aws_subnet.intra (expand)"
		"[root] module.networking.module.vpc.output.nat_ids (expand)" -> "[root] module.networking.module.vpc.aws_eip.nat (expand)"
		"[root] module.networking.module.vpc.output.nat_public_ips (expand)" -> "[root] module.networking.module.vpc.aws_eip.nat (expand)"
		"[root] module.networking.module.vpc.output.natgw_ids (expand)" -> "[root] module.networking.module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.networking.module.vpc.output.private_network_acl_id (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.private (expand)"
		"[root] module.networking.module.vpc.output.private_route_table_ids (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.output.private_subnet_arns (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.output.private_subnets (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.output.private_subnets_cidr_blocks (expand)" -> "[root] module.networking.module.vpc.aws_subnet.private (expand)"
		"[root] module.networking.module.vpc.output.public_network_acl_id (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.public (expand)"
		"[root] module.networking.module.vpc.output.public_route_table_ids (expand)" -> "[root] module.networking.module.vpc.aws_route_table.public (expand)"
		"[root] module.networking.module.vpc.output.public_subnet_arns (expand)" -> "[root] module.networking.module.vpc.aws_subnet.public (expand)"
		"[root] module.networking.module.vpc.output.public_subnets (expand)" -> "[root] module.networking.module.vpc.aws_subnet.public (expand)"
		"[root] module.networking.module.vpc.output.public_subnets_cidr_blocks (expand)" -> "[root] module.networking.module.vpc.aws_subnet.public (expand)"
		"[root] module.networking.module.vpc.output.redshift_network_acl_id (expand)" -> "[root] module.networking.module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.networking.module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.networking.module.vpc.aws_route_table.private (expand)"
		"[root] module.networking.module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.networking.module.vpc.aws_route_table.redshift (expand)"
		"[root] module.networking.module.vpc.output.redshift_subnet_arns (expand)" -> "[root] module.networking.module.vpc.aws_subnet.redshift (expand)"
		"[root] module.networking.module.vpc.output.redshift_subnet_group (expand)" -> "[root] module.networking.module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] module.networking.module.vpc.output.redshift_subnets (expand)" -> "[root] module.networking.module.vpc.aws_subnet.redshift (expand)"
		"[root] module.networking.module.vpc.output.redshift_subnets_cidr_blocks (expand)" -> "[root] module.networking.module.vpc.aws_subnet.redshift (expand)"
		"[root] module.networking.module.vpc.output.vgw_id (expand)" -> "[root] module.networking.module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.networking.module.vpc.output.vgw_id (expand)" -> "[root] module.networking.module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.networking.module.vpc.output.vpc_arn (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.vpc_cidr_block (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.vpc_enable_dns_hostnames (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.vpc_enable_dns_support (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_apigw_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.apigw (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_apigw_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.apigw (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_apigw_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.apigw (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_cloudtrail_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.cloudtrail (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_cloudtrail_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.cloudtrail (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_cloudtrail_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.cloudtrail (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_dynamodb_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.dynamodb (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_dynamodb_pl_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.dynamodb (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ec2_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ec2 (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ec2_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ec2 (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ec2_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ec2 (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ec2messages_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ec2messages (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ec2messages_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ec2messages (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ec2messages_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ec2messages (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecr_api_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_api (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecr_api_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_api (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecr_api_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_api (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecr_dkr_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecr_dkr_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecr_dkr_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecr_dkr (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecs_agent_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_agent (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecs_agent_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_agent (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecs_agent_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_agent (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecs_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecs (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecs_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecs (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecs_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecs (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecs_telemetry_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecs_telemetry_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ecs_telemetry_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ecs_telemetry (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_elasticloadbalancing_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_elasticloadbalancing_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_elasticloadbalancing_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.elasticloadbalancing (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_events_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.events (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_events_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.events (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_events_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.events (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_kms_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.kms (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_kms_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.kms (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_kms_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.kms (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_logs_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.logs (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_logs_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.logs (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_logs_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.logs (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_monitoring_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.monitoring (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_monitoring_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.monitoring (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_monitoring_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.monitoring (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_s3_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.s3 (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_s3_pl_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.s3 (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_sns_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.sns (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_sns_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.sns (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_sns_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.sns (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_sqs_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.sqs (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_sqs_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.sqs (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_sqs_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.sqs (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ssm_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ssm (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ssm_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ssm (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ssm_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ssm (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ssmmessages_dns_entry (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ssmmessages (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ssmmessages_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ssmmessages (expand)"
		"[root] module.networking.module.vpc.output.vpc_endpoint_ssmmessages_network_interface_ids (expand)" -> "[root] module.networking.module.vpc.aws_vpc_endpoint.ssmmessages (expand)"
		"[root] module.networking.module.vpc.output.vpc_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.vpc_instance_tenancy (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.vpc_main_route_table_id (expand)" -> "[root] module.networking.module.vpc.aws_vpc.this (expand)"
		"[root] module.networking.module.vpc.output.vpc_secondary_cidr_blocks (expand)" -> "[root] module.networking.module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.networking.module.vpc.var.amazon_side_asn (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.apigw_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.apigw_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.apigw_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.assign_generated_ipv6_cidr_block (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.azs (expand)" -> "[root] module.networking.data.aws_availability_zones.available (expand)"
		"[root] module.networking.module.vpc.var.azs (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.cidr (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.cloudtrail_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.cloudtrail_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.cloudtrail_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.create_database_internet_gateway_route (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.create_database_nat_gateway_route (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.create_database_subnet_group (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.create_database_subnet_route_table (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.create_elasticache_subnet_group (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.create_elasticache_subnet_route_table (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.create_redshift_subnet_group (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.create_redshift_subnet_route_table (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.create_vpc (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.database_acl_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.database_dedicated_network_acl (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.database_inbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.database_outbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.database_route_table_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.database_subnet_group_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.database_subnet_suffix (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.database_subnet_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.database_subnets (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.default_network_acl_egress (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.default_network_acl_ingress (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.default_network_acl_name (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.default_network_acl_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.default_vpc_enable_classiclink (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.default_vpc_enable_dns_support (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.default_vpc_name (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.default_vpc_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.dhcp_options_domain_name (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.dhcp_options_domain_name_servers (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.dhcp_options_netbios_name_servers (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.dhcp_options_netbios_node_type (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.dhcp_options_ntp_servers (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.dhcp_options_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ec2_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ec2_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ec2_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ec2messages_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ec2messages_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ec2messages_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecr_api_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecr_api_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecr_api_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecr_dkr_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecr_dkr_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecr_dkr_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecs_agent_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecs_agent_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecs_agent_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecs_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecs_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecs_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecs_telemetry_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecs_telemetry_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ecs_telemetry_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticache_acl_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticache_dedicated_network_acl (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticache_inbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticache_outbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticache_route_table_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticache_subnet_suffix (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticache_subnet_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticache_subnets (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticloadbalancing_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticloadbalancing_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.elasticloadbalancing_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_apigw_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_cloudtrail_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_dhcp_options (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_dns_hostnames (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_dns_support (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_dynamodb_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_ec2_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_ec2messages_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_ecr_api_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_ecr_dkr_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_ecs_agent_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_ecs_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_ecs_telemetry_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_elasticloadbalancing_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_events_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_kms_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_logs_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_monitoring_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_nat_gateway (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_public_redshift (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_s3_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_sns_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_sqs_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_ssm_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_ssmmessages_endpoint (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.enable_vpn_gateway (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.events_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.events_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.events_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.external_nat_ip_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.igw_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.instance_tenancy (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.intra_acl_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.intra_dedicated_network_acl (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.intra_inbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.intra_outbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.intra_route_table_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.intra_subnet_suffix (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.intra_subnet_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.intra_subnets (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.kms_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.kms_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.kms_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.logs_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.logs_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.logs_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.manage_default_network_acl (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.manage_default_vpc (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.map_public_ip_on_launch (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.monitoring_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.monitoring_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.monitoring_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.name (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.name (expand)" -> "[root] module.networking.var.namespace (expand)"
		"[root] module.networking.module.vpc.var.nat_eip_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.nat_gateway_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.one_nat_gateway_per_az (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.private_acl_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.private_dedicated_network_acl (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.private_inbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.private_outbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.private_route_table_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.private_subnet_suffix (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.private_subnet_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.private_subnets (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.propagate_private_route_tables_vgw (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.propagate_public_route_tables_vgw (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.public_acl_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.public_dedicated_network_acl (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.public_inbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.public_outbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.public_route_table_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.public_subnet_suffix (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.public_subnet_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.public_subnets (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.redshift_acl_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.redshift_dedicated_network_acl (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.redshift_inbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.redshift_outbound_acl_rules (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.redshift_route_table_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.redshift_subnet_group_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.redshift_subnet_suffix (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.redshift_subnet_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.redshift_subnets (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.reuse_nat_ips (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.secondary_cidr_blocks (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.single_nat_gateway (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.sns_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.sns_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.sns_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.sqs_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.sqs_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.sqs_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ssm_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ssm_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ssm_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ssmmessages_endpoint_private_dns_enabled (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ssmmessages_endpoint_security_group_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.ssmmessages_endpoint_subnet_ids (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.vpc_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.vpn_gateway_id (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.vpc.var.vpn_gateway_tags (expand)" -> "[root] module.networking.module.vpc (expand)"
		"[root] module.networking.module.websvr_sg (close)" -> "[root] module.networking.module.websvr_sg.output.security_group (expand)"
		"[root] module.networking.module.websvr_sg (expand)" -> "[root] module.networking (expand)"
		"[root] module.networking.module.websvr_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.websvr_sg.local.egress_rules (expand)"
		"[root] module.networking.module.websvr_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.websvr_sg.local.ingress_rules (expand)"
		"[root] module.networking.module.websvr_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.websvr_sg.var.description (expand)"
		"[root] module.networking.module.websvr_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.websvr_sg.var.name (expand)"
		"[root] module.networking.module.websvr_sg.aws_security_group.security_group (expand)" -> "[root] module.networking.module.websvr_sg.var.vpc_id (expand)"
		"[root] module.networking.module.websvr_sg.local.egress_rules (expand)" -> "[root] module.networking.module.websvr_sg.var.egress_rules (expand)"
		"[root] module.networking.module.websvr_sg.local.ingress_rules (expand)" -> "[root] module.networking.module.websvr_sg.var.ingress_rules (expand)"
		"[root] module.networking.module.websvr_sg.output.security_group (expand)" -> "[root] module.networking.module.websvr_sg.aws_security_group.security_group (expand)"
		"[root] module.networking.module.websvr_sg.var.description (expand)" -> "[root] module.networking.module.websvr_sg (expand)"
		"[root] module.networking.module.websvr_sg.var.egress_rules (expand)" -> "[root] module.networking.module.websvr_sg (expand)"
		"[root] module.networking.module.websvr_sg.var.ingress_rules (expand)" -> "[root] module.networking.module.lb_sg.output.security_group (expand)"
		"[root] module.networking.module.websvr_sg.var.ingress_rules (expand)" -> "[root] module.networking.module.websvr_sg (expand)"
		"[root] module.networking.module.websvr_sg.var.name (expand)" -> "[root] module.networking.module.websvr_sg (expand)"
		"[root] module.networking.module.websvr_sg.var.vpc_id (expand)" -> "[root] module.networking.module.vpc.output.vpc_id (expand)"
		"[root] module.networking.module.websvr_sg.var.vpc_id (expand)" -> "[root] module.networking.module.websvr_sg (expand)"
		"[root] module.networking.output.sg (expand)" -> "[root] module.networking.module.db_sg.output.security_group (expand)"
		"[root] module.networking.output.vpc (expand)" -> "[root] module.networking.module.vpc (close)"
		"[root] module.networking.var.namespace (expand)" -> "[root] module.networking (expand)"
		"[root] module.networking.var.namespace (expand)" -> "[root] var.namespace"
		"[root] output.db_password (expand)" -> "[root] module.database.output.db_config (expand)"
		"[root] output.lb_dns_name (expand)" -> "[root] module.autoscaling.output.lb_dns_name (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.autoscaling.aws_autoscaling_group.webserver (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.autoscaling.module.alb.aws_lb_listener.frontend_http_tcp_no_logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.autoscaling.module.alb.aws_lb_listener_certificate.https_listener_no_logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.autoscaling.module.iam_instance_profile.aws_iam_role_policy.iam_role_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.region"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] module.database.random_id.random_16 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/template\"] (close)" -> "[root] module.autoscaling.data.template_cloudinit_config.config (expand)"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/template\"] (close)"
	}
}

